name: Deploy VM pipeline

on:
  workflow_dispatch:
    inputs:
      content: 
        description: "File content"
        required: true
        type: string

env:
  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
  TF_VAR_content: ${{ inputs.content }}
  
jobs:

  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install Terragrunt
        continue-on-error: false
        uses: eLco/setup-terragrunt@v1
        with:
          terragrunt_version: "0.75.3"

      - name: Install Terraform
        continue-on-error: false
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.11.1"

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.24.1

      - name: Install dependencies
        run: make go/deps

      - name: Run terragrunt init
        run: make sites/southindia/vm/init

      - name: Run terragrunt plan
        run: make sites/southindia/vm/plan

      # - name: Run pre tests
      #   run: make -B terratest/sites/southindia/vm/pre

      - name: Run terragrunt apply
        run: make sites/southindia/vm/apply

      # - name: Run post tests
      #   run: make -B terratest/sites/southindia/vm/post

      - name: Run terragrunt output
        run: | 
          prefix="TEST" filepath="/tmp/.env" make sites/southindia/vm/output
          cat /tmp/.env >> $GITHUB_ENV

      - name: Check env variables
        run: |
          echo $TEST_CONTENT
          echo $TEST_FILE_NAME
      
